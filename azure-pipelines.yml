# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    git config --global --add filter.lfs.required true
    git config --global --add filter.lfs.smudge "git-lfs smudge -- %f"
    git config --global --add filter.lfs.process "git-lfs filter-process"
    git config --global --add filter.lfs.clean "git-lfs clean -- %f"
  displayName: Configure LFS for use with
- checkout: self
  lfs: true


- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.6
  displayName: 'Use Python 3.6'
- script: |
      python -m venv antenv
      source antenv/bin/activate
      python -m pip install --upgrade pip
      pip install setup
      pip install -r requirements.txt
  displayName: "Install requirements"
  
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
  
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'GLIB-Service-Acc'
    appType: 'webApp'
    WebAppName: 'grammarapi'
    deployToSlotOrASE: true
    ResourceGroupName: 'grammarapi'
    SlotName: 'production'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

